version: "3.0"
services:
  # Core Spring Boot Application
#  app:
#    build:
#      context: ..
#      dockerfile: ./Dockerfile
#    image: "rx_mongo_example"
#    env_file:
#      - .env
#    links:
#      - mongo
#    ports:
#      - 8080:8080


  webapp:
    container_name: ecommerce-webapp
    build:
       context: ../ecommerce-webapp
       dockerfile: Dockerfile
    image: web-tag
    links:
      - mongo
    environment:
      # Overrides the host in the Spring Boot application to use the Docker's hostname
      - SPRING_DATA_MONGODB_HOST=mongo      
    ports:
      - 8888:8080
    networks: 
      - mired


  webapp-reactive:
    container_name: ecommerce-web-reactive
    build: ../ecommerce-web-reactive
    image: webreactive-tag
    hostname: webReactiveHost
    depends_on:
      - webapp      
    networks: 
      - mired
    environment:
      # Overrides the host in the Spring Boot application to use the Docker's hostname
      - SPRING_DATA_MONGODB_HOST=mongo    
    ports:
      - 8887:8083
    networks: 
      - mired

         
  webapp-angular:
    container_name: ecommerce-web-angular
    build:
         context: ../ecommerce-webapp-angular
         dockerfile: Dockerfile
    image: webangular-tag
    hostname: webAngularHost
    depends_on:
      - webapp-reactive
    ports:
        - 4200:4200
    networks: 
        - mired
     
               

  # MongoDB - Reactive Persistence
  mongo:
    build:
      context: mongo
      dockerfile: Dockerfile
    image: "mongodb"
    hostname: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    env_file:
      - mongo/.env
    networks: 
      - mired      

  # The mongo-seed container is just for waiting until the main mongo container is done setting its replicaset up
  # and then initializing data.
  mongo-seed:
    build:
      context: mongo_seed
      dockerfile: Dockerfile
    # ping the main mongo instance relentlessly until the connection is ready, then wait, then run an initialize data script to populate data.
    command: bash -c "until mongo mongo:27017/fantasy_db; do echo 'Waiting for Mongo to be ready...'; sleep 1; done; sleep 3; mongo mongo:27017/fantasy_db init.js; "
    links:
      - mongo
    networks: 
      - mired

volumes:
  mongodata:
  
networks:
  mired: